{"version":3,"sources":["scripts/main.js"],"names":["BASE_URL","url","body","document","querySelector","list","createElement","style","backgroundColor","innerHTML","append","listDetails","insertAdjacentElement","ul","querySelectorAll","getPhones","fetch","then","response","ok","json","setTimeout","console","warn","status","getPhonesDetails","ids","map","el","margin","padding","borderRadius","width","detailArray","phonesWithDetails","phones","phonesIds","item","id","Promise","all","details","push","text","insertAdjacentHTML","detail","phone","nameText","name","description","tree","hideShow","element","target","firstElementChild","hidden","elem","addEventListener"],"mappings":";AAAA,aAgEA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA7DA,IAAMA,EACJ,mEACIC,EAASD,GAAAA,OAAAA,EAAf,SACME,EAAOC,SAASC,cAAc,QAC9BC,EAAOF,SAASG,cAAc,MAEpCD,EAAKE,MAAMC,gBAAX,UAEAH,EAAKI,UAAL,2BAGAP,EAAKQ,OAAOL,GAEZ,IAAMM,EAAcR,SAASG,cAAc,MAE3CK,EAAYJ,MAAMC,gBAAlB,UAEAG,EAAYF,UAAZ,mGAIAP,EAAKU,sBAAsB,aAAcD,GAEzC,IAAME,EAAKV,SAASW,iBAAiB,MASrC,SAASC,IACAC,OAAAA,MAAMf,GACVgB,KAAK,SAAAC,GACA,OAACA,EAASC,GAOPD,EAASE,OANPC,WAAW,WAEhBC,QAAQC,KAAeL,UAAAA,OAAAA,EAASM,UAC/B,OAOX,SAASC,EAAiBC,GACjBV,OAAAA,MAAShB,GAAAA,OAAAA,EAAY0B,KAAAA,OAAAA,EAArB,UACJT,KAAK,SAAAC,GACA,OAACA,EAASC,GAKPD,EAASE,OAHPE,QAAQC,KAAeL,UAAAA,OAAAA,EAASM,WA1B/C,EAAIX,GAAIc,IAAI,SAAAC,GACVA,EAAGrB,MAAMsB,OAAT,MACAD,EAAGrB,MAAMuB,QAAT,kBACAF,EAAGrB,MAAMwB,aAAT,MACAH,EAAGrB,MAAMyB,MAAT,QA6BF,IAAMC,EAAc,GACdC,EAAoB,GAE1BnB,IACGE,KAAK,SAAAkB,GACEC,IAAAA,EAAYD,EAAOR,IAAI,SAAAU,GAAQZ,OAAAA,EAAiBY,EAAKC,MAE3DC,QAAQC,IAAIJ,GACTnB,KAAK,SAAAwB,GACJA,EAAQd,IAAI,SAAAC,GACVK,EAAYS,KAAKd,GAEXe,IAAAA,EAAcf,OAAAA,OAAAA,EAAGU,GAAvB,SAEAjC,EAAKuC,mBAAmB,YAAaD,GAErCR,EAAOR,IAAI,SAAAU,GACLA,EAAKC,KAAOV,EAAGU,KACjBD,EAAKQ,OAASjB,EACdM,EAAkBQ,KAAKL,QAK7BH,EAAkBP,IAAI,SAAAmB,GACdC,IAAAA,EAEFD,sEAAAA,OAAAA,EAAME,KACKF,6BAAAA,OAAAA,EAAMD,OAAOI,YAH5B,0BAMAtC,EAAYiC,mBAAmB,YAAaG,KAGxCG,IAAAA,EAAO/C,SAASW,iBAAiB,SAEjCqC,EAAW,SAACvB,GACVS,IACAe,EADOxB,EAAGyB,OACKC,mBAEE,IAAnBF,EAAQG,OACVH,EAAQG,QAAS,EAEjBH,EAAQG,QAAS,GAIjBL,EAAAA,GAAMvB,IAAI,SAAA6B,GACZA,EAAKC,iBAAiB,QAASN","file":"main.baae4e12.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// write your code here\nconst BASE_URL\n= 'https://mate-academy.github.io/phone-catalogue-static/api/phones';\nconst url = `${BASE_URL}.json`;\nconst body = document.querySelector('body');\nconst list = document.createElement('ul');\n\nlist.style.backgroundColor = `#afe125`;\n\nlist.innerHTML = `\n  <h3>Phones ID</h3>\n`;\nbody.append(list);\n\nconst listDetails = document.createElement('ul');\n\nlistDetails.style.backgroundColor = `#64fade`;\n\nlistDetails.innerHTML = `\n  <h3>Phone names with details<br>\n  (please click on the name to see the description)</h3>\n`;\nbody.insertAdjacentElement('afterbegin', listDetails);\n\nconst ul = document.querySelectorAll('ul');\n\n[...ul].map(el => {\n  el.style.margin = `8px`;\n  el.style.padding = `0 8px 16px 24px`;\n  el.style.borderRadius = `8px`;\n  el.style.width = `35%`;\n});\n\nfunction getPhones() {\n  return fetch(url)\n    .then(response => {\n      if (!response.ok) {\n        return setTimeout(() => {\n          // eslint-disable-next-line no-console\n          console.warn(`Error: ${response.status}`);\n        }, 5000);\n      }\n\n      return response.json();\n    });\n};\n\nfunction getPhonesDetails(ids) {\n  return fetch(`${BASE_URL}/${ids}.json`)\n    .then(response => {\n      if (!response.ok) {\n        // eslint-disable-next-line no-console\n        return console.warn(`Error: ${response.status}`);\n      }\n\n      return response.json();\n    });\n}\n\nconst detailArray = [];\nconst phonesWithDetails = [];\n\ngetPhones()\n  .then(phones => {\n    const phonesIds = phones.map(item => getPhonesDetails(item.id));\n\n    Promise.all(phonesIds)\n      .then(details => {\n        details.map(el => {\n          detailArray.push(el);\n\n          const text = `<li>${el.id}</li>`;\n\n          list.insertAdjacentHTML('beforeend', text);\n\n          phones.map(item => {\n            if (item.id === el.id) {\n              item.detail = el;\n              phonesWithDetails.push(item);\n            }\n          });\n        });\n\n        phonesWithDetails.map(phone => {\n          const nameText = `\n          <li class=\"tree\" style=\"cursor: pointer\">\n            ${phone.name}\n            <ul hidden>${phone.detail.description}</ul>\n          </li>`;\n\n          listDetails.insertAdjacentHTML('beforeend', nameText);\n        });\n\n        const tree = document.querySelectorAll('.tree');\n\n        const hideShow = (el) => {\n          const item = el.target;\n          const element = item.firstElementChild;\n\n          if (element.hidden === false) {\n            element.hidden = true;\n          } else {\n            element.hidden = false;\n          }\n        };\n\n        [...tree].map(elem => {\n          elem.addEventListener('click', hideShow);\n        });\n      });\n  });\n"]}